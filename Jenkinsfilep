def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node ('built-in') {
    def mavenHome = tool name : "maven3.9.9"
try{
stage('checkoutcode'){
git branch: 'development', credentialsId: '7c063c2d-13d1-4c70-b165-2c3f8ca627b6', url: 'https://github.com/VinayP353/maven-web-application.git'
}

stage('Build'){
sh "$mavenHome/bin/mvn clean package"
}
/*stage('SonarQubeReport'){
sh "$mavenHome/bin/mvn sonar:sonar"
}
stage('ArtifactRepo'){
sh "$mavenHome/bin/mvn deploy"
}
stage('DeployToTomcat'){
sshagent(['8a43c9f9-9c78-4ebc-b21a-778f4d8bea0f']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ubuntu@3.85.4.45:/opt/apache-tomcat-9.0.98/webapps"
}
}*/
}

catch(e){
currentBuild.result="FAILED"
}
finally{
notifyBuild(currentBuild.result)
}

}
